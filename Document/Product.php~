<?php
namespace RestBundle\Document;

use Doctrine\ODM\MongoDB\Mapping\Annotations as MongoDB;
use Doctrine\Common\Collections\ArrayCollection;
use Symfony\Component\Security\Core\User\UserInterface;

/** 
 * @MongoDB\Document
 */ 
class Product   
{

	/**
     * @MongoDB\Id
     */
    protected $id;
	
	/**
	 * @MongoDB\Field(type="string") 
	 */
	protected $name;
	
	/**
	 * @MongoDB\Field(type="string") 
	 */
	protected $description;
	
	/**
	 * @MongoDB\Field(type="string") 
	 */
	protected $idCategory;
	
	/**
	 * @MongoDB\Field(type="string") 
	 */
	protected $idScategory;
	
	/**
	 * @MongoDB\Field(type="string") 
	 */
	protected $idSScategory;
	
	/**
	 * @MongoDB\Field(type="collection") 
	 */
	protected $asc_caracteristics_ids = array();
	
	/** 
	 * @MongoDB\EmbedMany(targetDocument="Caracteristic")
	 */
    private $productCaracteristics = array();
	
	/** 
	 * @MongoDB\EmbedMany(targetDocument="Caracteristic")
	 */
    private $modelCaracteristics = array();
	
	
    public function __construct()
    {
        $this->productCaracteristics = new \Doctrine\Common\Collections\ArrayCollection();
        $this->modelCaracteristics = new \Doctrine\Common\Collections\ArrayCollection();
    }
    
    /**
     * Get id
     *
     * @return id $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return self
     */
    public function setName($name)
    {
        $this->name = $name;
        return $this;
    }

    /**
     * Get name
     *
     * @return string $name
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set description
     *
     * @param string $description
     * @return self
     */
    public function setDescription($description)
    {
        $this->description = $description;
        return $this;
    }

    /**
     * Get description
     *
     * @return string $description
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set idCategory
     *
     * @param string $idCategory
     * @return self
     */
    public function setIdCategory($idCategory)
    {
        $this->idCategory = $idCategory;
        return $this;
    }

    /**
     * Get idCategory
     *
     * @return string $idCategory
     */
    public function getIdCategory()
    {
        return $this->idCategory;
    }

    /**
     * Set idScategory
     *
     * @param string $idScategory
     * @return self
     */
    public function setIdScategory($idScategory)
    {
        $this->idScategory = $idScategory;
        return $this;
    }

    /**
     * Get idScategory
     *
     * @return string $idScategory
     */
    public function getIdScategory()
    {
        return $this->idScategory;
    }

    /**
     * Set idSScategory
     *
     * @param string $idSScategory
     * @return self
     */
    public function setIdSScategory($idSScategory)
    {
        $this->idSScategory = $idSScategory;
        return $this;
    }

    /**
     * Get idSScategory
     *
     * @return string $idSScategory
     */
    public function getIdSScategory()
    {
        return $this->idSScategory;
    }

    /**
     * Add productCaracteristic
     *
     * @param RestBundle\Document\Caracteristic $productCaracteristic
     */
    public function addProductCaracteristic(\RestBundle\Document\Caracteristic $productCaracteristic)
    {
        $this->productCaracteristics[] = $productCaracteristic;
    }

    /**
     * Remove productCaracteristic
     *
     * @param RestBundle\Document\Caracteristic $productCaracteristic
     */
    public function removeProductCaracteristic(\RestBundle\Document\Caracteristic $productCaracteristic)
    {
        $this->productCaracteristics->removeElement($productCaracteristic);
    }

    /**
     * Get productCaracteristics
     *
     * @return \Doctrine\Common\Collections\Collection $productCaracteristics
     */
    public function getProductCaracteristics()
    {
        return $this->productCaracteristics;
    }

    /**
     * Add modelCaracteristic
     *
     * @param RestBundle\Document\Caracteristic $modelCaracteristic
     */
    public function addModelCaracteristic(\RestBundle\Document\Caracteristic $modelCaracteristic)
    {
        $this->modelCaracteristics[] = $modelCaracteristic;
    }

    /**
     * Remove modelCaracteristic
     *
     * @param RestBundle\Document\Caracteristic $modelCaracteristic
     */
    public function removeModelCaracteristic(\RestBundle\Document\Caracteristic $modelCaracteristic)
    {
        $this->modelCaracteristics->removeElement($modelCaracteristic);
    }

    /**
     * Get modelCaracteristics
     *
     * @return \Doctrine\Common\Collections\Collection $modelCaracteristics
     */
    public function getModelCaracteristics()
    {
        return $this->modelCaracteristics;
    }

    /**
     * Set ascCaracteristicsIds
     *
     * @param collection $ascCaracteristicsIds
     * @return self
     */
    public function setAscCaracteristicsIds($ascCaracteristicsIds)
    {
        $this->asc_caracteristics_ids = $ascCaracteristicsIds;
        return $this;
    }

    /**
     * Get ascCaracteristicsIds
     *
     * @return collection $ascCaracteristicsIds
     */
    public function getAscCaracteristicsIds()
    {
        return $this->asc_caracteristics_ids;
    }

    
}
